# Geany's snippets configuration file
#
# use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR).
# use \t or %ws% for an indentation step, it will be replaced according to the current document's indent mode.
# use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue').
# use %key% for all keys defined in the [Special] section.
# use %cursor% to define where the cursor should be placed after completion. You can define multiple
#     %cursor% wildcards and use the "Move cursor in snippet" to jump to the next defined cursor
#     position in the completed snippet.
# You can define a section for each supported filetype to overwrite default settings, the section
# name must match exactly the internal filetype name, run 'geany --ft-names' for a full list.
#
# Additionally, you can use most of the template wildcards like {developer}, {command:...},
# or {date} in the snippets.
# See the documentation for details.

# For a list of available filetype names, execute:
# geany --ft-names

# Default is used for all filetypes and keys can be overwritten by [filetype] sections
[Default]

# special keys to be used in other snippets, cannot be used "standalone"
# can be used by %key%, e.g. %brace_open%
# nesting of special keys is not supported (e.g. brace_open=\n{\n%brace_close% won't work)
# key "wordchars" is very special, it defines the word delimiting characters when looking for
# a word to auto complete, leave commented to use the default wordchars
[Special]
brace_open=\n{\n\t
brace_close=}\n
block=\n{\n\t%cursor%\n}
block_cursor=\n{\n\t%cursor%\n}\n%cursor%
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# Optional keybindings to insert snippets
# Note: these can be overridden by Geany's configurable keybindings
[Keybindings]
#for=<Ctrl>7

[C]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%

[C++]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Java]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[PHP]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for ($i = 0; $i < %cursor%; $i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Javascript]
lm=⇏
fu=➮ %cursor%
lo=ロ %cursor%
th=⚫
this=⚪
ty=⬤ %cursor%
un=∅ %cursor%
va=∇ %cursor%
av=∆ %cursor%
de=∆
fo=⧗ %cursor%
ze=⊜ %cursor%
if=⌥ %cursor%
fi=⌥ %cursor%
wh=⧖ %cursor%
in=∞
inf=∞
ea=⬌ %cursor%
pu=⬊
po=⬈
Po=⬉
Pu=⬋
fe=⬍
eq=≟
ne=≠
re=≣
st=⌛
el=⎇
si=⌚
tr=⦿
fa=⦾
.le=↥
ci=⌿⌚
ct=⌿⌛
co=♻
ra=⚂
pi=★
ro=⬠
fl=⍽
sc=⦙
;=⦙
seq=∼
sne=≁
sas=≈
ts=≂
io=≀
li=≀≀
lio=≀≀
ioio=≀≀
macro=≞
new=⟡
dl=⏀
sp=⌶
jo=⫴
sl=⋃
pl=⨄
fi=ꔬ
ma=⧉
aa=ꗚ
so=❄
su=⩪
ca=△
cc=◬
.lx=↟
.la=ꕉ
u1=⨃
wi=☛
ei=⥹
jst=ꗌ
jpa=ꖇ
fsrs=⛁
fsws=⛃
tt=⚡
ground=⏚
oldphone=☎
redcross=✚

a=ᵃ%cursor%
b=ᵇ%cursor%
c=ᶜ%cursor%
d=ᵈ%cursor%
e=ᵉ%cursor%
f=ᶠ%cursor%
g=ᵍ%cursor%
h=ʰ%cursor%
i=ⁱ%cursor%
j=ʲ%cursor%
k=ᵏ%cursor%
l=ˡ%cursor%
m=ᵐ%cursor%
n=ⁿ%cursor%
o=ᵒ%cursor%
p=ᵖ%cursor%
q=ʱ%cursor%
r=ʳ%cursor%
s=ˢ%cursor%
t=ᵗ%cursor%
u=ᵘ%cursor%
v=ᵛ%cursor%
w=ʷ%cursor%
x=ˣ%cursor%
y=ʸ%cursor%
z=ᶻ%cursor%

ooa=ⓐ
oob=ⓑ
ooc=ⓒ
ood=ⓓ
ooe=ⓔ
oof=ⓕ
oog=ⓖ
ooh=ⓗ
ooi=ⓘ
ooj=ⓙ
ook=ⓚ
ool=ⓛ
oom=ⓜ
oon=ⓝ
ooo=ⓞ
oop=ⓟ
ooq=ⓠ
oor=ⓡ
oos=ⓢ
oot=ⓣ
oou=ⓤ
oov=ⓥ
oow=ⓦ
oox=ⓧ
ooy=ⓨ
ooz=ⓩ

0=⁰%cursor%
1=¹%cursor%
2=²%cursor%
3=³%cursor%
4=⁴%cursor%
5=⁵%cursor%
6=⁶%cursor%
7=⁷%cursor%
8=⁸%cursor%
9=⁹%cursor%

alf=α
bet=β
gam=γ
del=δ
eps=ε
zet=ζ
eta=η
tet=θ
iot=ι
kap=κ
lam=λ
muu=μ
nuu=ν
xii=ξ
pii=π
roo=ρ
sig=σ
tau=τ
ups=υ
fii=φ
chi=χ
psi=ψ
ome=ω
v1=❶
v2=❷
v3=❸
v4=❹
v5=❺
v6=❻
v7=❼
v8=❽
v9=❾
v10=❿
a1=①
a2=②
a3=③
a4=④
a5=⑤
a6=⑥
a7=⑦
a8=⑧
a9=⑨
a10=⑩
m1=ᗰ
m2=ᙏ
m3=ᗲ
m4=ᗶ
m5=ᗼ
m6=ᙢ
m7=ᙕ
m8=ᙨ
m9=ᙜ
m0=ᘻ

left=←
right=→
up=↑
down=↓

[C#]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Vala]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[ActionScript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n%cursor%
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%%cursor%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Python]
for=for i in xrange(%cursor%):\n\t
if=if %cursor%:\n\t
elif=elif %cursor%:\n\t
else=else:\n\t
while=while %cursor%:\n\t
try=try:\n\t%cursor%\nexcept Exception, ex:\n\t
with=with %cursor%:\n\t
def=def %cursor% (%cursor%):\n\t""" Function doc """\n\t
class=class %cursor%:\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass

[Ferite]
iferr=iferr%block_cursor%fix%block%
monitor=monitor%block_cursor%handle%block%

[Haskell]

[HTML]
table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>
